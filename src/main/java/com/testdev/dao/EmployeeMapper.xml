<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.testdev.dao.EmployeeMapper">

	<resultMap id="employeeResultMap" type="com.testdev.domain.Employee">
		<id property="employeeId" column="employee_id" />
		<result property="firstName" column="first_name" />
		<result property="lastName" column="last_name" />
		<result property="age" column="age" />
	</resultMap>

	<resultMap id="EmployeeResult" type="com.testdev.domain.Employee">
		<id property="employeeId" column="employee_employee_id" />
		<result property="firstName" column="employee_first_name" />
		<result property="lastName" column="employee_last_name" />
		<result property="age" column="employee_age" />
		<collection property="cars" ofType="com.testdev.domain.Car">
			<id property="carId" column="car_car_id" />
			<result property="brandName" column="car_brand_name" />
			<result property="model" column="car_model" />
			<association property="employee" resultMap="EmployeeResult" />
		</collection>
		<collection property="companies" ofType="com.testdev.domain.Company">
			<id property="companyId" column="company_company_id" />
			<result property="companyName" column="company_company_name" />
			<result property="city" column="company_city" />
		</collection>
	</resultMap>

	<select id="selectEmployee" resultMap="employeeResultMap">
		select * from employees
		where employee_id = #{id}
	</select>

	<select id="selectEmployees" resultMap="employeeResultMap">
		select * from employees
	</select>

	<select id="selectEmployeeWithCars" resultMap="EmployeeResult">
		select
		e.employee_id as employee_employee_id,
		e.first_name as
		employee_first_name,
		e.last_name as employee_last_name,
		e.age as
		employee_age,
		c.car_id as car_car_id,
		c.employee_id as car_employee_id,
		c.brand_name as car_brand_name,
		c.model as car_model
		from employees e
		left outer join cars c on e.employee_id = c.employee_id
		where
		c.employee_id = #{employeeId}
	</select>

	<select id="selectEmployeesWithCars" resultMap="EmployeeResult">
		select
		e.employee_id as employee_employee_id,
		e.first_name as
		employee_first_name,
		e.last_name as employee_last_name,
		e.age as
		employee_age,
		c.car_id as car_car_id,
		c.employee_id as car_employee_id,
		c.brand_name as car_brand_name,
		c.model as car_model
		from employees e
		left outer join cars c on e.employee_id = c.employee_id
	</select>

	<select id="selectEmployeesWithCarsAndCompanies" resultMap="EmployeeResult">
		select e.employee_id as employee_employee_id, e.first_name as
		employee_first_name, e.last_name as employee_last_name, e.age as
		employee_age, c.car_id as car_car_id, c.employee_id as
		car_employee_id,
		c.brand_name as car_brand_name, c.model as car_model,
		comp.company_id as
		company_company_id, comp.company_name as
		company_company_name, comp.city
		as company_city from employees e left
		outer join employee_company co on
		e.employee_id = co.employee_id left
		outer join companies comp on
		comp.company_id = co.company_id left
		outer join cars c on e.employee_id
		= c.employee_id
	</select>

	<insert id="insertEmployee" useGeneratedKeys="true" keyProperty="employeeId">
		insert into employees (first_name,last_name,age)
		values
		(#{firstName},#{lastName},#{age})
	</insert>

	<update id="updateEmployee">
		update employees set
		first_name = #{firstName},
		last_name = #{lastName},
		age = #{age}
		where employee_id = #{employeeId}
	</update>

	<delete id="deleteEmployee">
		delete from employees where employee_id =
		#{employeeId}
	</delete>
</mapper>